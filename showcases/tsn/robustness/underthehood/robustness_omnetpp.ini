[General]
# robustness_omnetpp.ini
#-------------------------------A v-----------------------------
debug-on-errors = true
network = inet.showcases.tsn.robustness.TsnNetSmallRing
description = "test TSN switch with both Qbv and Qci"
record-eventlog = true

#*.s{0..1000}.typename = "TsnSwitch"

# client applications
*.d3.numApps = 2
*.d3.app[*].typename = "UdpSourceApp"
#-------------------------------B v | application configuration--------------------------
*.d3.app[0].display-name = "FG0"
*.d3.app[1].display-name = "FG1"
*.d3.app[0].io.destAddress = "d0"
*.d3.app[1].io.destAddress = "d0"
*.d3.app[0].io.destPort = 1000
*.d3.app[1].io.destPort = 1001
*.d3.app[*].source.packetNameFormat = "%M-%m-%c"
*.d3.app[0].source.packetLength = 1500B-58B
*.d3.app[1].source.packetLength = 1500B-58B
*.d3.app[0].source.productionInterval = 1000us 
*.d3.app[1].source.productionInterval = 500us 
*.d3.app[1].source.initialProductionOffset = 0us
*.d3.app[0].source.initialProductionOffset = 200us

# 58B = 
# 8B (UDP) + 20B (IP) + 14B (ETH MAC,Type) + 4B (Q tag) + 4B (ETH FCS) + 8B (ETH PHY-Preamble SFD)


# server applications
*.d0.numApps = 2
*.d0.app[*].typename = "UdpSinkApp"
*.d0.app[0].display-name = "FG0"
*.d0.app[1].display-name = "FG1"
*.d0.app[0].io.localPort = 1000
*.d0.app[1].io.localPort = 1001

#----------------------------A v------------------------
# enable incoming/outgoing streams
*.d{0..1000}.hasIncomingStreams = true
*.d{0..1000}.hasOutgoingStreams = true

*.s{0..1000}.hasIncomingStreams = true
*.s{0..1000}.hasOutgoingStreams = true

# enable egress traffic shaping
*.s{0..1000}.hasEgressTrafficShaping = true
*.d{0..1000}.hasEgressTrafficShaping = true

# time-aware traffic shaping with 8 queues
*.*.eth[*].macLayer.queue.numTrafficClasses = 8
*.*.eth[*].macLayer.queue.queue[0..6].display-name = "best effort"
*.*.eth[*].macLayer.queue.queue[7].display-name = "TS"

#---------------------------B v | encoder decoder identifier configuration-----------------------

# client stream identification
*.d*.bridging.streamIdentifier.identifier.mapping = [{stream: "FG0", packetFilter: expr(udp.destPort == 1000)},
                                                     {stream: "FG1", packetFilter: expr(udp.destPort == 1001)}]
# client stream encoding
*.d*.bridging.streamCoder.encoder.mapping = [{stream: "FG0", pcp: 7},
                                             {stream: "FG1", pcp: 7}]


*.s*.bridging.streamCoder.decoder.mapping = [{pcp: 7, stream: "FG0"},
                                             {pcp: 7, stream: "FG1"}]
*.s*.bridging.streamCoder.encoder.mapping = [{stream: "FG0", pcp: 7},
                                             {stream: "FG1", pcp: 7}]

#*.s1.eth[2].bitrate = 1000Mbps
#*.s0.eth[1].bitrate = 1000Mbps

#-------------------------A v-------------------------
# automatic gate scheduling
*.gateScheduleConfigurator.typename = "RobustnessScheduleConfigurator"  # where problems seems to be
*.gateScheduleConfigurator.gateCycleDuration = 1ms  # default gating cycle for ports with no schedule
*.gateScheduleConfigurator.schedule_path = "input/omnetpp_schedule.txt"
*.gateScheduleConfigurator.output_schedule_path = "output/log_schedule.txt"

#------------------------B v---------------------------
## 58B = 8B (UDP) + 20B (IP) + 4B (802.1 Q-TAG) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
#*.gateScheduleConfigurator.configuration =
#   [{pcp: 4, gateIndex: 7, application: "app[0]", source: "d3", destination: "d0", packetLength: 1500B, packetInterval: 1000us, maxLatency: 500us},
#    {pcp: 4, gateIndex: 7, application: "app[1]", source: "d3", destination: "d0", packetLength: 1500B, packetInterval: 500us, maxLatency: 500us}]

#-----------------------A v-----------------------------------
*.globalSafeConfigurator.typename = "GlobalSafeConfigurator"
*.globalSafeConfigurator.globalSafeInput = "input/global_safe.txt"
*.globalSafeConfigurator.ingressScheduleInput = "input/ingress.txt"
# Qci stream filtering
*.s*.hasIngressTrafficFiltering = true
#
### sample filtering parameters 
*.s*.bridging.streamFilter.ingress.typename = "SimpleIeee8021qFilter"
*.s*.bridging.streamFilter.ingress.numStreams = 2 # need to be set in ini file
##*.s*.bridging.streamFilter.ingress.classifier.mapping = {"FG0": 0, "FG1": 1} # {streamId:filterId}, for flows not in mapping, they will not go to any stream filter and simply pass SimpleIeee8021qFilter
*.s*.bridging.streamFilter.ingress.filter[*].typename = "RobustnessDropper"


#---------------------------xxxxx v----------------------
# gate scheduling visualization
*.visualizer.gateScheduleVisualizer.displayGateSchedules = true
*.visualizer.gateScheduleVisualizer.displayDuration = 1000us
*.visualizer.gateScheduleVisualizer.gateFilter = "*.s0.eth[*].**.transmissionGate[7] or *.s1.eth[*].**.transmissionGate[7] or *.d3.eth[*].**.transmissionGate[7]"
*.visualizer.gateScheduleVisualizer.height = 16

